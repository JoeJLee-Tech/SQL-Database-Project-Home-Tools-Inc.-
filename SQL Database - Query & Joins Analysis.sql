--SQL Class Excercise # 3 (SQL Queries with Joins) 
--Joe Lee 

--1 
SELECT P_CODE, P_DESCRIPT, P_PRICE, P.V_CODE, V_NAME 
FROM PRODUCT AS P INNER JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
ORDER BY V_CODE; 

SELECT P_CODE, P_DESCRIPT, P_PRICE, P.V_CODE, V_NAME 
FROM PRODUCT AS P JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
ORDER BY V_CODE; 

SELECT P_CODE, P_DESCRIPT, P_PRICE, P.V_CODE, V_NAME 
FROM PRODUCT AS P, VENDOR AS V 
WHERE P.V_CODE = V.V_CODE 
ORDER BY V_CODE; 

--3 
SELECT P_CODE, P_DESCRIPT, P_PRICE, P.V_CODE, V_NAME 
FROM PRODUCT AS P INNER JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE
WHERE P_PRICE > 100 
ORDER BY V_CODE; 

--4 
SELECT INV_NUMBER,P.P_CODE, P_DESCRIPT, P.V_CODE, LINE_UNITS, LINE_PRICE 
FROM VENDOR AS V INNER JOIN PRODUCT AS P ON V.V_CODE = P.V_CODE 
INNER JOIN LINE AS L ON P.P_CODE = L.P_CODE 
WHERE LINE_UNITS > 1 
ORDER BY INV_NUMBER, LINE_PRICE DESC; 

SELECT INV_NUMBER,P.P_CODE, P_DESCRIPT, P.V_CODE, LINE_UNITS, LINE_PRICE 
FROM VENDOR AS V JOIN PRODUCT AS P ON V.V_CODE = P.V_CODE 
INNER JOIN LINE AS L ON P.P_CODE = L.P_CODE 
WHERE LINE_UNITS > 1 
ORDER BY V_NAME, LINE_PRICE DESC; 

SELECT INV_NUMBER,P.P_CODE, P_DESCRIPT, P.V_CODE, LINE_UNITS, LINE_PRICE 
FROM VENDOR AS V, PRODUCT AS P, LINE AS L 
WHERE V.V_CODE = P.V_CODE 
AND P.P_CODE = L.P_CODE 
AND LINE_UNITS > 1 
ORDER BY V_CODE, LINE_PRICE DESC; 

--5 
SELECT E.EMP_LNAME AS 'EMPLOYEE', M.EMP_LNAME AS 'MANAGER' 
FROM EMPLOYEE AS E INNER JOIN EMPLOYEE AS M
ON E.EMP_MGR = M.EMP_NUM 
ORDER BY 2; 

--5A 
SELECT E.EMP_LNAME AS 'EMPLOYEE', M.EMP_LNAME AS 'MANAGER' 
FROM EMPLOYEE AS E LEFT JOIN EMPLOYEE AS M
ON E.EMP_MGR = M.EMP_NUM 
ORDER BY 2; 

--6 
SELECT P_CODE, V.V_CODE, V_NAME 
FROM PRODUCT AS P LEFT JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
ORDER BY V.V_CODE; 

--7 
SELECT P_CODE, V.V_CODE, V_NAME 
FROM PRODUCT AS P RIGHT JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
ORDER BY P_CODE; 

--8 
SELECT P_CODE, V.V_CODE, V_NAME 
FROM PRODUCT AS P FULL JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
ORDER BY V.V_CODE; 

--9 
SELECT P_CODE, P_DESCRIPT, P_PRICE 
FROM PRODUCT
WHERE P_PRICE = 
	(SELECT MIN (P_PRICE) FROM PRODUCT); 

--10 
SELECT P_CODE, P_DESCRIPT, P_PRICE 
FROM PRODUCT 
WHERE V_CODE IN 
	(SELECT V_CODE 
	FROM VENDOR 
	WHERE V_STATE = 'GA'); 

SELECT P_CODE, P_DESCRIPT, P_PRICE 
FROM PRODUCT AS P INNER JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
AND V_STATE = 'GA'; 

--11
SELECT P_CODE, P_DESCRIPT, P_PRICE 
FROM PRODUCT 
WHERE P_CODE IN 
	(SELECT P_CODE
	FROM LINE 
	WHERE LINE_UNITS > 1
	AND INV_NUMBER IN 
		(SELECT INV_NUMBER 
		FROM INVOICE 
		WHERE INV_DATE = '16-Jan-10')) 
ORDER BY P_PRICE ASC; 

--12 
SELECT P_CODE, P_DESCRIPT, P_PRICE
FROM PRODUCT 
WHERE P_PRICE > ALL 
	(SELECT P_PRICE 
	FROM PRODUCT 
	WHERE P_DISCOUNT = 0); 

SELECT P_CODE, P_DESCRIPT, P_PRICE
FROM PRODUCT 
WHERE P_PRICE >  
	(SELECT MAX(P_PRICE) 
	FROM PRODUCT 
	WHERE P_DISCOUNT = 0); 

--13 
SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR 
WHERE V_CODE IN 
	(SELECT V_CODE 
	FROM PRODUCT 
	WHERE P_DISCOUNT > 0); 

SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR 
WHERE V_CODE = ANY  
	(SELECT V_CODE 
	FROM PRODUCT 
	WHERE P_DISCOUNT > 0); 

--14 
SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR 
WHERE V_CODE NOT IN 
	(SELECT DISTINCT V_CODE 
	FROM PRODUCT
	WHERE V_CODE IS NOT NULL);

SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR 
WHERE V_CODE != ALL 
	(SELECT DISTINCT V_CODE 
	FROM PRODUCT
	WHERE V_CODE IS NOT NULL);

--15 
SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR AS V 
WHERE .05 IN 
	(SELECT P_DISCOUNT 
	FROM PRODUCT AS P 
	WHERE V.V_CODE = P.V_CODE); 

SELECT DISTINCT V.V_CODE, V_NAME, V_STATE 
FROM VENDOR AS V INNER JOIN PRODUCT AS P 
ON V.V_CODE = P.V_CODE 
AND P_DISCOUNT = .05; 

--16 
SELECT V_CODE, V_NAME, V_STATE 
FROM VENDOR AS V 
WHERE EXISTS 
	(SELECT * FROM PRODUCT AS P
	WHERE P.V_CODE = V.V_CODE
	AND P_DISCOUNT > 0); 

SELECT DISTINCT V.V_CODE, V_NAME, V_STATE 
FROM VENDOR AS V INNER JOIN PRODUCT AS P 
ON V.V_CODE = P.V_CODE 
AND P_DISCOUNT > 0; 

--17 
SELECT P_CODE, P_DESCRIPT, P_PRICE 
FROM PRODUCT AS P 
WHERE V_CODE IS NOT NULL 
AND NOT EXISTS 
	(SELECT * FROM VENDOR AS V 
	WHERE P.V_CODE = V.V_CODE 
	AND V_STATE = 'GA'); 

SELECT P_CODE, P_DESCRIPT, P_PRICE
FROM PRODUCT AS P INNER JOIN VENDOR AS V 
ON P.V_CODE = V.V_CODE 
WHERE V_STATE = 'GA'; 

--18 
SELECT INV_NUMBER, CUS_FNAME, CUS_LNAME 
FROM INVOICE AS I INNER JOIN CUSTOMER AS C 
ON I.CUS_CODE = C.CUS_CODE 
WHERE CUS_AREACODE = 615 
ORDER BY 3 DESC; 

--19 
SELECT CUS_LNAME, CUS_FNAME, I.INV_NUMBER, INV_DATE, P_CODE, LINE_UNITS, LINE_PRICE 
FROM CUSTOMER AS C INNER JOIN INVOICE AS I ON C.CUS_CODE = I.CUS_CODE 
INNER JOIN LINE AS L ON I.INV_NUMBER = L.INV_NUMBER 
ORDER BY INV_DATE DESC; 

--20 
SELECT C.CUS_CODE, CUS_LNAME, CUS_FNAME, 
COUNT(I.INV_NUMBER) AS 'INVOICE COUNT', 
SUM(LINE_UNITS) AS 'QUANTITY OF ITEMS', 
SUM(LINE_UNITS * LINE_PRICE) AS 'TOTAL AMOUNT INVOICED' 
FROM CUSTOMER AS C INNER JOIN INVOICE AS I ON C.CUS_CODE = I.CUS_CODE 
INNER JOIN LINE AS L ON I.INV_NUMBER = L.INV_NUMBER 
GROUP BY C.CUS_CODE, CUS_LNAME, CUS_FNAME 
ORDER BY 6 DESC; 

--21 
SELECT P.P_CODE, P_DESCRIPT, V.V_CODE, V_NAME, COUNT(DISTINCT INV_NUMBER) AS 'NUMBER OF INVOICES', 
SUM(LINE_UNITS) AS 'PRODUCT QUANTITY', 
SUM(LINE_UNITS * LINE_PRICE) AS 'INVOICE AMOUNT' 
FROM VENDOR AS V INNER JOIN PRODUCT AS P ON V.V_CODE = P.V_CODE 
INNER JOIN LINE AS L ON P.P_CODE = L.P_CODE
GROUP BY P.P_CODE, P_DESCRIPT, V.V_CODE, V_NAME
ORDER BY 7 DESC; 

--27 
SELECT P_CODE, V_NAME, P_PRICE, (SELECT AVG(P_PRICE) FROM PRODUCT) AS 'AVERAGE PRODUCT PRICE', 
(P_PRICE - (SELECT AVG(P_PRICE) FROM PRODUCT)) AS 'DIFFERENCE' 
FROM PRODUCT AS P INNER JOIN VENDOR AS V ON P.P_CODE = V.V_CODE 
ORDER BY 5 DESC; 